cache-control
  public
    请求返回的内容所经过的任何路径、包括中间的代理服务器以及发出这个请求的客户端、都可以对返回的内容进行缓存的操作
  private
    发起请求的客户端才可以缓存
  no-cache
    浏览器对设置了 no-cache 的资源可以缓存、但都会去服务器端进行资源的验证、确认允许使用缓存才会去读取本地缓存
    案例
      res.setHeader('Cache-Control', 'max-age=100000, no-cache')
      未超时情况下希望还发送请求到服务端
  no-store
    客户端与代理服务器都不可进行缓存、永远去服务端获取最新数据

  max-age/秒
    缓存过期后才向服务器重新获取数据
  s-maxage/秒
    只在代理服务器生效
  max-stale/秒
    发起请求的这一方主动携带的头信息、即便缓存过期但是咋 max-stale 时间内还是使用的缓存内容
    浏览器中无法使用

  must-revalidate
    设置了 max-age 缓存已经过期了必须去原服务端发送请求重新获取数据再来验证这部分内容是否真的过期了
