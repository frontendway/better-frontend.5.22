prototype 上 api
  arr.copyWithin
    改变原数组
    target: 制到指定目标索引位置
    start:  元素复制的起始位置
    end:    停止复制的索引位置 (默认为 array.length)、如果为负值表示倒数
    案例
      var arr = ['a', 'b', 'c', 'd', 'e', 'f']
      arr.copyWithin(0, 3, 4)
        ->  ["d", "b", "c", "d", "e", "f"]
      arr.copyWithin(1, 3)
        ->  ["d", "d", "e", "f", "e", "f"]
  values
    返回一个新的 Array Iterator 对象、该对象包含数组每个索引的值

map filter reduce各自有什么作用
  map
    作用是生成一个新数组、遍历原数组、将每个元素拿出来做一些变换然后放入到新的数组中
    回调函数接受三个参数、分别是当前索引元素、索引、原数组
  filter 
    作用也是生成一个新数组、在遍历数组的时候将返回值为 true 的元素放入新数组、我们可以利用这个函数删除一些不需要的元素
  reduce
    可以将数组中的元素通过回调函数最终转换为一个值、接受 2 个参数、回调函数和初始值
    回调接受4个参数
      首次 数组第1项 数组第2项 索引 原数组
      下次 上次回调返回值 数组第2项 索引 原数组

案例
  const arr = [1, 2]
  arr[3] = 4
  arr[2] -> undefined
